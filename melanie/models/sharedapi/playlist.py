# generated by datamodel-codegen:
#   timestamp: 2022-10-28T15:28:47+00:00


from __future__ import annotations

from datetime import date, datetime  # noqa
from typing import Any

from melanie import BaseModel


class ExternalUrls(BaseModel):
    spotify: str | None


class AddedBy(BaseModel):
    external_urls: ExternalUrls | None
    href: str | None
    id: str | None
    name: str | None
    type: str | None
    uri: str | None


class Image(BaseModel):
    height: int | None
    url: str | None
    width: int | None


class ExternalIDS(BaseModel):
    isrc: str | None


class Format(BaseModel):
    mime_type: str | None
    protocol: str | None


class Badges(BaseModel):
    pro: bool | None
    pro_unlimited: bool | None
    verified: bool | None


class Product(BaseModel):
    id: str | None


class CreatorSubscription(BaseModel):
    product: Product | None


class Visual(BaseModel):
    entry_time: int | None
    urn: str | None
    visual_url: str | None


class VideoThumbnail(BaseModel):
    url: Any | None


class Album(BaseModel):
    album_type: str | None
    artists: list[AddedBy] | None
    external_urls: ExternalUrls | None
    href: str | None
    id: str | None
    images: list[Image] | None
    name: str | None
    release_date: date | None
    release_date_precision: str | None
    total_tracks: int | None
    type: str | None
    uri: str | None


class Transcoding(BaseModel):
    duration: int | None
    format: Format | None
    preset: str | None
    quality: str | None
    snipped: bool | None
    url: str | None


class Visuals(BaseModel):
    enabled: bool | None
    urn: str | None
    visuals: list[Visual] | None


class Media(BaseModel):
    transcodings: list[Transcoding] | None


class User(BaseModel):
    avatar_url: str | None
    badges: Badges | None
    city: str | None
    comments_count: int | None
    country_code: Any | None
    created_at: datetime | None
    creator_subscription: CreatorSubscription | None
    creator_subscriptions: list[CreatorSubscription] | None
    description: str | None
    first_name: str | None
    followers_count: int | None
    followings_count: int | None
    full_name: str | None
    groups_count: int | None
    id: int | None
    kind: str | None
    last_modified: datetime | None
    last_name: str | None
    likes_count: int | None
    permalink: str | None
    permalink_url: str | None
    playlist_count: int | None
    playlist_likes_count: int | None
    reposts_count: Any | None
    station_permalink: str | None
    station_urn: str | None
    track_count: int | None
    uri: str | None
    urn: str | None
    username: str | None
    verified: bool | None
    visuals: Visuals | None


class SoundcloudTrack(BaseModel):
    artwork_url: str | None
    caption: Any | None
    direct_url: str | None
    comment_count: int | None
    commentable: bool | None
    created_at: datetime | None
    description: str | None
    display_date: datetime | None
    download_count: int | None
    downloadable: bool | None
    duration: int | None
    embeddable_by: str | None
    full_duration: int | None
    genre: str | None
    has_downloads_left: bool | None
    id: int | None
    kind: str | None
    label_name: str | None
    last_modified: datetime | None
    licence: Any | None
    likes_count: int | None
    media: Media | None
    monetization_model: str | None
    permalink: str | None
    permalink_url: str | None
    playback_count: int | None
    policy: str | None
    public: bool | None
    purchase_title: str | None
    purchase_url: str | None
    release_date: datetime | None
    reposts_count: int | None
    secret_token: Any | None
    sharing: str | None
    state: str | None
    station_permalink: str | None
    station_urn: str | None
    streamable: bool | None
    tag_list: str | None
    title: str | None
    track_authorization: str | None
    track_format: str | None
    uri: str | None
    urn: str | None
    user: User | None
    user_id: int | None
    visuals: Any | None
    waveform_url: str | None


class Track(BaseModel):
    album: Album | None
    artists: list[AddedBy] | None
    disc_number: int | None
    duration_ms: int | None
    episode: bool | None
    explicit: bool | None
    external_ids: ExternalIDS | None
    external_urls: ExternalUrls | None
    href: str | None
    id: str | None
    is_local: bool | None
    name: str | None
    popularity: int | None
    preview_url: str | None
    soundcloud_track: SoundcloudTrack | None
    track: bool | None
    track_number: int | None
    type: str | None
    uri: str | None

    @property
    def search_str(self) -> str:
        return f"{self.artists[0].name} {self.name}"


class Item(BaseModel):
    added_at: datetime | None
    added_by: AddedBy | None
    is_local: bool | None
    primary_color: Any | None
    track: Track | None
    video_thumbnail: VideoThumbnail | None


class PlaylistResults(BaseModel):
    total: int | None
    urls: list[str] | None = []
    soundcloud_urls: list[str] | None = []
    href: str | None = []
    items: list[Item] | None
