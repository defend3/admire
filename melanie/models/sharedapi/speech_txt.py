# generated by datamodel-codegen:
#   timestamp: 2023-08-06T07:28:15+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated
from uuid import UUID  # noqa

from melanie import BaseModel, Field


class PrimaryLanguage(BaseModel):
    language: Annotated[str | None, Field(alias="Language")]
    confidence: Annotated[str | None, Field(alias="Confidence")]


class Translation(BaseModel):
    id: Annotated[UUID | None, Field(alias="Id")]
    display_text: Annotated[str | None, Field(alias="DisplayText")]
    language: Annotated[str | None, Field(alias="Language")]


class Extension(Enum):
    translation_source_ref = "TranslationSourceRef"
    speech_phrase = "SpeechPhrase"


class SpeechPhrase(BaseModel):
    id: Annotated[str | None, Field(alias="Id")]
    recognition_status: Annotated[str | None, Field(alias="RecognitionStatus")]
    display_text: Annotated[str | None, Field(alias="DisplayText")]
    offset: Annotated[int | None, Field(alias="Offset")]
    duration: Annotated[int | None, Field(alias="Duration")]
    primary_language: Annotated[PrimaryLanguage | None, Field(alias="PrimaryLanguage")]
    channel: Annotated[int | None, Field(alias="Channel")]


class TranslationSourceRef(BaseModel):
    id: Annotated[str | None, Field(alias="Id")]
    reference_type: Annotated[Extension | None, Field(alias="ReferenceType")]


class SpeechTtsDetectionRaw(BaseModel):
    extensions: Annotated[list[Extension] | None, Field(alias="Extensions")]
    translation_source_ref: Annotated[TranslationSourceRef | None, Field(alias="TranslationSourceRef")]
    speech_phrase: Annotated[SpeechPhrase | None, Field(alias="SpeechPhrase")]
    translation_status: Annotated[str | None, Field(alias="TranslationStatus")]
    translations: Annotated[list[Translation] | None, Field(alias="Translations")]
