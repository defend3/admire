# generated by datamodel-codegen:
#   timestamp: 2022-12-26T06:40:06+00:00


from __future__ import annotations

from typing import Optional

from melanie import BaseModel, Field


class Levels(BaseModel):
    debug: int | None = Field(None, alias="DEBUG")
    error: int | None = Field(None, alias="ERROR")
    info: int | None = Field(None, alias="INFO")
    silent: int | None = Field(None, alias="SILENT")
    trace: int | None = Field(None, alias="TRACE")
    warn: int | None = Field(None, alias="WARN")


class Gaid(BaseModel):
    ua_id: str | None = Field(None, alias="UAId")
    measurement_id: str | None = Field(None, alias="measurementId")


class Size(BaseModel):
    height: int | None
    width: int | None


class Localization(BaseModel):
    direction: int | None


class OneLinkParams(BaseModel):
    campaign_fallback_value: str | None = Field(None, alias="campaignFallbackValue")
    campaign_keys: list[str] | None = Field(None, alias="campaignKeys")
    deep_link_url: str | None = Field(None, alias="deepLinkUrl")
    desktop_page_url: str | None = Field(None, alias="desktopPageUrl")
    google_click_id_param: str | None = Field(None, alias="googleClickIdParam")
    ios_app_store_url: str | None = Field(None, alias="iosAppStoreUrl")
    one_link_base_url: str | None = Field(None, alias="oneLinkBaseUrl")
    pid_fallback_value: str | None = Field(None, alias="pidFallbackValue")
    pid_keys: list[str] | None = Field(None, alias="pidKeys")


class PageDescription(BaseModel):
    value: str | None


class AvatarImageClass(BaseModel):
    fallback_url: str | None = Field(None, alias="fallbackUrl")
    url: str | None


class ViewerInfo(BaseModel):
    country: str | None
    is_gdpr_country: bool | None = Field(None, alias="isGdprCountry")
    locale: str | None


class Query(BaseModel):
    username: str | None


class Log(BaseModel):
    levels: Levels | None


class FacebookImageClass(BaseModel):
    size: Size | None
    url: str | None


class PageLinks(BaseModel):
    canonical_url: str | None = Field(None, alias="canonicalUrl")
    download_url: str | None = Field(None, alias="downloadUrl")
    one_link_params: OneLinkParams | None = Field(None, alias="oneLinkParams")
    one_link_url: str | None = Field(None, alias="oneLinkUrl")
    snapchat_canonical_url: str | None = Field(None, alias="snapchatCanonicalUrl")
    snapchat_deep_link_url: str | None = Field(None, alias="snapchatDeepLinkUrl")
    snapcode_image_url: str | None = Field(None, alias="snapcodeImageUrl")


class PageMetadata(BaseModel):
    page_description: PageDescription | None = Field(None, alias="pageDescription")
    page_title: str | None = Field(None, alias="pageTitle")
    page_type: int | None = Field(None, alias="pageType")
    share_id: str | None = Field(None, alias="shareId")


class Bitmoji3D(BaseModel):
    avatar_image: AvatarImageClass | None = Field(None, alias="avatarImage")
    background_image: AvatarImageClass | None = Field(None, alias="backgroundImage")


class LinkPreview(BaseModel):
    canonical_url: str | None = Field(None, alias="canonicalUrl")
    description: str | None
    facebook_image: FacebookImageClass | None = Field(None, alias="facebookImage")
    title: str | None
    twitter_image: FacebookImageClass | None = Field(None, alias="twitterImage")


class UserInfo(BaseModel):
    bitmoji3d: Bitmoji3D | None
    display_name: str | None = Field(None, alias="displayName")
    snapcode_image_url: str | None = Field(None, alias="snapcodeImageUrl")
    username: str | None


class UserProfile(BaseModel):
    _case: str | None = Field(None, alias="$case")
    user_info: UserInfo | None = Field(None, alias="userInfo")


class PageProps(BaseModel):
    curated_highlights: list | None = Field(None, alias="curatedHighlights")
    gaid: Gaid | None
    lenses: list | None
    link_preview: LinkPreview | None = Field(None, alias="linkPreview")
    localization: Localization | None
    page_links: PageLinks | None = Field(None, alias="pageLinks")
    page_metadata: PageMetadata | None = Field(None, alias="pageMetadata")
    spotlight_highlights: list | None = Field(None, alias="spotlightHighlights")
    spotlight_highlights_metadata: list | None = Field(None, alias="spotlightHighlightsMetadata")
    user_profile: UserProfile | None = Field(None, alias="userProfile")
    viewer_info: ViewerInfo | None = Field(None, alias="viewerInfo")


class Props(BaseModel):
    log: Log | None
    page_props: PageProps | None = Field(None, alias="pageProps")
    status: int | None


class SnapDataRaw(BaseModel):
    app_gip: bool | None = Field(None, alias="appGip")
    asset_prefix: str | None = Field(None, alias="assetPrefix")
    build_id: str | None = Field(None, alias="buildId")
    gip: bool | None
    is_fallback: bool | None = Field(None, alias="isFallback")
    page: str | None
    props: Props | None
    query: Query | None
    script_loader: list | None = Field(None, alias="scriptLoader")

    snap_combo_url = Optional[str]


class SnapProfileResponse(BaseModel):
    username: str
    bio: str | None
    subscriber_count: int | None
    profile_image_url: str | None
    hero_image_url: str | None
    display_name: str | None = Field(None, description="The in-app name the user has set for their account.")
    snapcode_image_url: str | None = Field(None, description="Snap QR code.")
    bitmoji_url: str | None = Field(None, description="Bitmoji, rendered as PNG. Transparent background.")
    bitmoji_background_url: str | None = Field(None, description="The bitmoji background shown within the Snapchat application")
    one_click_url: str | None = Field(None, description="Direct link that will open the Snapchat app and allow the user to be added.")
    share_image_url: str | None = Field(None, description="A Combo image of the user's bitmoji and snapcode")
    story_media: list[str] | None = []
    spotlight_media: list[str] | None = []
