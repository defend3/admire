# generated by datamodel-codegen:
#   timestamp: 2023-01-20T17:57:34+00:00


from __future__ import annotations

from typing import Annotated

from melanie import BaseModel, Field
from melanie.models.sharedapi.tiktok import TikTokUserProfileResponse  # noqa


class Extra(BaseModel):
    fatal_item_ids: list | None
    logid: str | None
    now: int | None


class Author(BaseModel):
    avatar_larger: Annotated[str | None, Field(alias="avatarLarger")]
    avatar_medium: Annotated[str | None, Field(alias="avatarMedium")]
    avatar_thumb: Annotated[str | None, Field(alias="avatarThumb")]
    comment_setting: Annotated[int | None, Field(alias="commentSetting")]
    download_setting: Annotated[int | None, Field(alias="downloadSetting")]
    duet_setting: Annotated[int | None, Field(alias="duetSetting")]
    ftc: bool | None
    id: str | None
    is_ad_virtual: Annotated[bool | None, Field(alias="isADVirtual")]
    is_embed_banned: Annotated[bool | None, Field(alias="isEmbedBanned")]
    nickname: str | None
    open_favorite: Annotated[bool | None, Field(alias="openFavorite")]
    private_account: Annotated[bool | None, Field(alias="privateAccount")]
    relation: int | None
    sec_uid: Annotated[str | None, Field(alias="secUid")]
    secret: bool | None
    signature: str | None
    stitch_setting: Annotated[int | None, Field(alias="stitchSetting")]
    tt_seller: Annotated[bool | None, Field(alias="ttSeller")]
    unique_id: Annotated[str | None, Field(alias="uniqueId")]
    verified: bool | None


class AuthorStats(BaseModel):
    digg_count: Annotated[int | None, Field(alias="diggCount")]
    follower_count: Annotated[int | None, Field(alias="followerCount")]
    following_count: Annotated[int | None, Field(alias="followingCount")]
    heart: int | None
    heart_count: Annotated[int | None, Field(alias="heartCount")]
    video_count: Annotated[int | None, Field(alias="videoCount")]


class ChallengeStats(BaseModel):
    video_count: Annotated[int | None, Field(alias="videoCount")]
    view_count: Annotated[int | None, Field(alias="viewCount")]


class TextExtra(BaseModel):
    aweme_id: Annotated[str | None, Field(alias="awemeId")]
    end: int | None
    hashtag_id: Annotated[str | None, Field(alias="hashtagId")]
    hashtag_name: Annotated[str | None, Field(alias="hashtagName")]
    is_commerce: Annotated[bool | None, Field(alias="isCommerce")]
    sec_uid: Annotated[str | None, Field(alias="secUid")]
    start: int | None
    sub_type: Annotated[int | None, Field(alias="subType")]
    type: int | None
    user_id: Annotated[str | None, Field(alias="userId")]
    user_unique_id: Annotated[str | None, Field(alias="userUniqueId")]


class DuetInfo(BaseModel):
    duet_from_id: Annotated[int | None, Field(alias="duetFromId")]


class StickerStats(BaseModel):
    use_count: Annotated[int | None, Field(alias="useCount")]


class Music(BaseModel):
    album: str | None
    author_name: Annotated[str | None, Field(alias="authorName")]
    cover_large: Annotated[str | None, Field(alias="coverLarge")]
    cover_medium: Annotated[str | None, Field(alias="coverMedium")]
    cover_thumb: Annotated[str | None, Field(alias="coverThumb")]
    duration: int | None
    id: str | None
    original: bool | None
    play_url: Annotated[str | None, Field(alias="playUrl")]
    title: str | None


class ItemListStats(BaseModel):
    collect_count: Annotated[int | None, Field(alias="collectCount")]
    comment_count: Annotated[int | None, Field(alias="commentCount")]
    digg_count: Annotated[int | None, Field(alias="diggCount")]
    play_count: Annotated[int | None, Field(alias="playCount")]
    share_count: Annotated[int | None, Field(alias="shareCount")]


class StickersOnItem(BaseModel):
    sticker_text: Annotated[list[str] | None, Field(alias="stickerText")]
    sticker_type: Annotated[int | None, Field(alias="stickerType")]


class PlayAddr(BaseModel):
    data_size: Annotated[int | None, Field(alias="DataSize")]
    file_cs: Annotated[str | None, Field(alias="FileCs")]
    file_hash: Annotated[str | None, Field(alias="FileHash")]
    uri: Annotated[str | None, Field(alias="Uri")]
    url_key: Annotated[str | None, Field(alias="UrlKey")]
    url_list: Annotated[list[str] | None, Field(alias="UrlList")]


class SubtitleInfo(BaseModel):
    format: Annotated[str | None, Field(alias="Format")]
    language_code_name: Annotated[str | None, Field(alias="LanguageCodeName")]
    language_id: Annotated[int | None, Field(alias="LanguageID")]
    size: Annotated[int | None, Field(alias="Size")]
    source: Annotated[str | None, Field(alias="Source")]
    url: Annotated[str | None, Field(alias="Url")]
    url_expire: Annotated[int | None, Field(alias="UrlExpire")]
    version: Annotated[int | None, Field(alias="Version")]
    video_subtitle_id: Annotated[int | None, Field(alias="VideoSubtitleID")]


class VolumeInfo(BaseModel):
    loudness: Annotated[float | None, Field(alias="Loudness")]
    peak: Annotated[float | None, Field(alias="Peak")]


class LogPb(BaseModel):
    impr_id: str | None


class Challenge(BaseModel):
    cover_larger: Annotated[str | None, Field(alias="coverLarger")]
    cover_medium: Annotated[str | None, Field(alias="coverMedium")]
    cover_thumb: Annotated[str | None, Field(alias="coverThumb")]
    desc: str | None
    id: str | None
    is_commerce: Annotated[bool | None, Field(alias="isCommerce")]
    profile_larger: Annotated[str | None, Field(alias="profileLarger")]
    profile_medium: Annotated[str | None, Field(alias="profileMedium")]
    profile_thumb: Annotated[str | None, Field(alias="profileThumb")]
    stats: ChallengeStats | None
    title: str | None


class Content(BaseModel):
    desc: str | None
    text_extra: Annotated[list[TextExtra] | None, Field(alias="textExtra")]


class EffectSticker(BaseModel):
    id: Annotated[int | None, Field(alias="ID")]
    name: str | None
    sticker_stats: Annotated[StickerStats | None, Field(alias="stickerStats")]


class BitrateInfo(BaseModel):
    bitrate: Annotated[int | None, Field(alias="Bitrate")]
    codec_type: Annotated[str | None, Field(alias="CodecType")]
    gear_name: Annotated[str | None, Field(alias="GearName")]
    play_addr: Annotated[PlayAddr | None, Field(alias="PlayAddr")]
    quality_type: Annotated[int | None, Field(alias="QualityType")]


class Video(BaseModel):
    bitrate: int | None
    bitrate_info: Annotated[list[BitrateInfo] | None, Field(alias="bitrateInfo")]
    codec_type: Annotated[str | None, Field(alias="codecType")]
    cover: str | None
    definition: str | None
    download_addr: Annotated[str | None, Field(alias="downloadAddr")]
    duration: int | None
    dynamic_cover: Annotated[str | None, Field(alias="dynamicCover")]
    encode_user_tag: Annotated[str | None, Field(alias="encodeUserTag")]
    encoded_type: Annotated[str | None, Field(alias="encodedType")]
    format: str | None
    height: int | None
    id: str | None
    origin_cover: Annotated[str | None, Field(alias="originCover")]
    play_addr: Annotated[str | None, Field(alias="playAddr")]
    ratio: str | None
    reflow_cover: Annotated[str | None, Field(alias="reflowCover")]
    share_cover: Annotated[list[str] | None, Field(alias="shareCover")]
    size: int | None
    subtitle_infos: Annotated[list[SubtitleInfo] | None, Field(alias="subtitleInfos")]
    video_quality: Annotated[str | None, Field(alias="videoQuality")]
    volume_info: Annotated[VolumeInfo | None, Field(alias="volumeInfo")]
    width: int | None
    zoom_cover: Annotated[dict[str, str] | None, Field(alias="zoomCover")]


class ItemList(BaseModel):
    ba_info: Annotated[str | None, Field(alias="BAInfo")]
    ad_authorization: Annotated[bool | None, Field(alias="adAuthorization")]
    ad_label_version: Annotated[int | None, Field(alias="adLabelVersion")]
    author: Author | None
    author_stats: Annotated[AuthorStats | None, Field(alias="authorStats")]
    challenges: list[Challenge] | None
    collected: bool | None
    contents: list[Content] | None
    create_time: Annotated[int | None, Field(alias="createTime")]
    desc: str | None
    digged: bool | None
    diversification_id: Annotated[int | None, Field(alias="diversificationId")]
    duet_display: Annotated[int | None, Field(alias="duetDisplay")]
    duet_enabled: Annotated[bool | None, Field(alias="duetEnabled")]
    duet_info: Annotated[DuetInfo | None, Field(alias="duetInfo")]
    for_friend: Annotated[bool | None, Field(alias="forFriend")]
    id: str | None
    is_ad: Annotated[bool | None, Field(alias="isAd")]
    item_comment_status: Annotated[int | None, Field(alias="itemCommentStatus")]
    item_mute: Annotated[bool | None, Field(alias="itemMute")]
    music: Music | None
    offical_item: Annotated[bool | None, Field(alias="officalItem")]
    original_item: Annotated[bool | None, Field(alias="originalItem")]
    playlist_id: Annotated[str | None, Field(alias="playlistId")]
    private_item: Annotated[bool | None, Field(alias="privateItem")]
    secret: bool | None
    share_enabled: Annotated[bool | None, Field(alias="shareEnabled")]
    show_not_pass: Annotated[bool | None, Field(alias="showNotPass")]
    stats: ItemListStats | None
    stitch_display: Annotated[int | None, Field(alias="stitchDisplay")]
    stitch_enabled: Annotated[bool | None, Field(alias="stitchEnabled")]
    text_extra: Annotated[list[TextExtra] | None, Field(alias="textExtra")]
    video: Video | None
    vl1: bool | None
    effect_stickers: Annotated[list[EffectSticker] | None, Field(alias="effectStickers")]

    stickers_on_item: Annotated[list[StickersOnItem] | None, Field(alias="stickersOnItem")]


class TikTokItemListRaw(BaseModel):
    cursor: str | None
    extra: Extra | None
    has_more: Annotated[bool | None, Field(alias="hasMore")]
    item_list: Annotated[list[ItemList] | None, Field(alias="itemList")]
    log_pb: LogPb | None
    status_code: Annotated[int | None, Field(alias="statusCode")]
    status_code_1: Annotated[int | None, Field(alias="status_code")]


class TikTokTopVideoItem(BaseModel):
    title: str
    plays: int
    url: str
    comments: int
    date: int
    id: str


class TiktokTopUserVideoResults(BaseModel):
    count: int
    author: TikTokUserProfileResponse | None
    items: list[TikTokTopVideoItem] = []
