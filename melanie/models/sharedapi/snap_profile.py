# generated by datamodel-codegen:
#   timestamp: 2023-02-25T10:59:10+00:00

from __future__ import annotations

from melanie import BaseModel, Field


class Levels(BaseModel):
    trace: int | None = Field(None, alias="TRACE")
    debug: int | None = Field(None, alias="DEBUG")
    info: int | None = Field(None, alias="INFO")
    warn: int | None = Field(None, alias="WARN")
    error: int | None = Field(None, alias="ERROR")
    silent: int | None = Field(None, alias="SILENT")


class Gaid(BaseModel):
    ua_id: str | None = Field(None, alias="UAId")
    measurement_id: str | None = Field(None, alias="measurementId")


class Size(BaseModel):
    width: int | None
    height: int | None


class Localization(BaseModel):
    direction: int | None


class OneLinkParams(BaseModel):
    one_link_base_url: str | None = Field(None, alias="oneLinkBaseUrl")
    pid_keys: list[str] | None = Field(None, alias="pidKeys")
    pid_fallback_value: str | None = Field(None, alias="pidFallbackValue")
    campaign_keys: list[str] | None = Field(None, alias="campaignKeys")
    campaign_fallback_value: str | None = Field(None, alias="campaignFallbackValue")
    google_click_id_param: str | None = Field(None, alias="googleClickIdParam")
    deep_link_url: str | None = Field(None, alias="deepLinkUrl")
    ios_app_store_url: str | None = Field(None, alias="iosAppStoreUrl")
    desktop_page_url: str | None = Field(None, alias="desktopPageUrl")


class PageDescription(BaseModel):
    value: str | None


class PurpleSnapUrls(BaseModel):
    media_url: str | None = Field(None, alias="mediaUrl")
    media_preview_url: PageDescription | None = Field(None, alias="mediaPreviewUrl")


class EngagementStats(BaseModel):
    view_count: int | None = Field(None, alias="viewCount")
    share_count: int | None = Field(None, alias="shareCount")


class SnapMetadatum(BaseModel):
    context_cards: list | None = Field(None, alias="contextCards")
    hashtags: list | None


class FluffySnapUrls(BaseModel):
    media_url: str | None = Field(None, alias="mediaUrl")


class ViewerInfo(BaseModel):
    country: str | None
    locale: str | None
    is_gdpr_country: bool | None = Field(None, alias="isGdprCountry")


class Query(BaseModel):
    username: str | None


class Log(BaseModel):
    levels: Levels | None


class Image(BaseModel):
    url: str | None
    size: Size | None


class PageLinks(BaseModel):
    one_link_url: str | None = Field(None, alias="oneLinkUrl")
    snapchat_canonical_url: str | None = Field(None, alias="snapchatCanonicalUrl")
    canonical_url: str | None = Field(None, alias="canonicalUrl")
    snapcode_image_url: str | None = Field(None, alias="snapcodeImageUrl")
    download_url: str | None = Field(None, alias="downloadUrl")
    one_link_params: OneLinkParams | None = Field(None, alias="oneLinkParams")
    snapchat_deep_link_url: str | None = Field(None, alias="snapchatDeepLinkUrl")


class PageMetadata(BaseModel):
    page_type: int | None = Field(None, alias="pageType")
    page_title: str | None = Field(None, alias="pageTitle")
    page_description: PageDescription | None = Field(None, alias="pageDescription")
    share_id: str | None = Field(None, alias="shareId")


class SpotlightHighlightSnapList(BaseModel):
    snap_index: int | None = Field(None, alias="snapIndex")
    snap_id: PageDescription | None = Field(None, alias="snapId")
    snap_media_type: int | None = Field(None, alias="snapMediaType")
    snap_urls: PurpleSnapUrls | None = Field(None, alias="snapUrls")
    timestamp_in_sec: PageDescription | None = Field(None, alias="timestampInSec")


class SpotlightHighlightsMetadatum(BaseModel):
    snap_metadata: list[SnapMetadatum] | None = Field(None, alias="snapMetadata")
    engagement_stats: EngagementStats | None = Field(None, alias="engagementStats")


class StorySnapList(BaseModel):
    snap_index: int | None = Field(None, alias="snapIndex")
    snap_id: PageDescription | None = Field(None, alias="snapId")
    snap_media_type: int | None = Field(None, alias="snapMediaType")
    snap_urls: FluffySnapUrls | None = Field(None, alias="snapUrls")
    timestamp_in_sec: PageDescription | None = Field(None, alias="timestampInSec")


class LinkPreview(BaseModel):
    title: str | None
    description: str | None
    canonical_url: str | None = Field(None, alias="canonicalUrl")
    twitter_image: Image | None = Field(None, alias="twitterImage")
    facebook_image: Image | None = Field(None, alias="facebookImage")


class SpotlightHighlight(BaseModel):
    story_type: int | None = Field(None, alias="storyType")
    snap_list: list[SpotlightHighlightSnapList] | None = Field(None, alias="snapList")
    story_id: PageDescription | None = Field(None, alias="storyId")
    story_title: PageDescription | None = Field(None, alias="storyTitle")
    thumbnail_url: PageDescription | None = Field(None, alias="thumbnailUrl")
    story_tap_id: int | None = Field(None, alias="storyTapId")


class Story(BaseModel):
    story_type: int | None = Field(None, alias="storyType")
    snap_list: list[StorySnapList] | None = Field(None, alias="snapList")
    story_id: PageDescription | None = Field(None, alias="storyId")
    thumbnail_url: PageDescription | None = Field(None, alias="thumbnailUrl")
    story_tap_id: int | None = Field(None, alias="storyTapId")


class SnapPublicProfileModel(BaseModel):
    props: Props | None
    page: str | None
    query: Query | None
    build_id: str | None = Field(None, alias="buildId")
    asset_prefix: str | None = Field(None, alias="assetPrefix")
    is_fallback: bool | None = Field(None, alias="isFallback")
    gip: bool | None
    app_gip: bool | None = Field(None, alias="appGip")
    script_loader: list | None = Field(None, alias="scriptLoader")


class Props(BaseModel):
    page_props: PageProps | None = Field(None, alias="pageProps")
    status: int | None
    log: Log | None


class UserProfile(BaseModel):
    field_case: str | None = Field(None, alias="$case")
    public_profile_info: PublicProfileInfo | None = Field(None, alias="publicProfileInfo")


class PageProps(BaseModel):
    gaid: Gaid | None
    viewer_info: ViewerInfo | None = Field(None, alias="viewerInfo")
    localization: Localization | None
    page_links: PageLinks | None = Field(None, alias="pageLinks")
    page_metadata: PageMetadata | None = Field(None, alias="pageMetadata")
    user_profile: UserProfile | None = Field(None, alias="userProfile")
    story: Story | None
    link_preview: LinkPreview | None = Field(None, alias="linkPreview")
    lenses: list | None
    curated_highlights: list | None = Field(None, alias="curatedHighlights")
    spotlight_highlights: list[SpotlightHighlight] | None = Field(None, alias="spotlightHighlights")
    spotlight_highlights_metadata: list[SpotlightHighlightsMetadatum] | None = Field(None, alias="spotlightHighlightsMetadata")


class PublicProfileInfo(BaseModel):
    username: str | None
    title: str | None
    snapcode_image_url: str | None = Field(None, alias="snapcodeImageUrl")
    badge: int | None
    category_string_id: str | None = Field(None, alias="categoryStringId")
    subcategory_string_id: str | None = Field(None, alias="subcategoryStringId")
    subscriber_count: int | None = Field(None, alias="subscriberCount")
    bio: str | None
    website_url: str | None = Field(None, alias="websiteUrl")
    profile_picture_url: str | None = Field(None, alias="profilePictureUrl")
    address: str | None
    has_curated_highlights: bool | None = Field(None, alias="hasCuratedHighlights")
    has_spotlight_highlights: bool | None = Field(None, alias="hasSpotlightHighlights")
    mutable_name: str | None = Field(None, alias="mutableName")
    publisher_type: str | None = Field(None, alias="publisherType")
    square_hero_image_url: str | None = Field(None, alias="squareHeroImageUrl")
    primary_color: str | None = Field(None, alias="primaryColor")
    has_story: bool | None = Field(None, alias="hasStory")
    related_accounts_info: list[RelatedAccountsInfo] | None = Field(None, alias="relatedAccountsInfo")


class RelatedAccountsInfo(BaseModel):
    public_profile_info: PublicProfileInfo | None = Field(None, alias="publicProfileInfo")
    subscribe_link: OneLinkParams | None = Field(None, alias="subscribeLink")


SnapPublicProfileModel.update_forward_refs()
Props.update_forward_refs()
PageProps.update_forward_refs()
UserProfile.update_forward_refs()
PublicProfileInfo.update_forward_refs()
