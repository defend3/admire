# generated by datamodel-codegen:
#   timestamp: 2023-07-15T00:37:22+00:00

from __future__ import annotations

from typing import Annotated

from melanie import AnyUrl, BaseModel, Field


class ClipsMusicAttributionInfo(BaseModel):
    artist_name: str | None
    song_name: str | None
    uses_original_audio: bool | None
    should_mute_audio: bool | None
    should_mute_audio_reason: str | None
    audio_id: str | None


class Dimensions(BaseModel):
    height: int | None
    width: int | None


class Resource(BaseModel):
    config_width: int | None
    config_height: int | None
    src: AnyUrl | None


class Edge(BaseModel):
    count: int | None


class PurpleNode(BaseModel):
    text: str | None


class SharingFrictionInfo(BaseModel):
    should_have_sharing_friction: bool | None


class TentacledNode(BaseModel):
    id: str | None
    thumbnail_src: AnyUrl | None
    thumbnail_resources: list[Resource] | None


class StickyNode(BaseModel):
    permalink: AnyUrl | None
    shortcode: str | None
    thumbnail_src: AnyUrl | None


class EdgeMediaToCaptionEdge(BaseModel):
    node: PurpleNode | None


class FluffyNode(BaseModel):
    typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    shortcode: str | None
    commenter_count: int | None
    dimensions: Dimensions | None
    display_url: AnyUrl | None
    display_resources: list[Resource] | None
    is_video: bool | None = False
    sharing_friction_info: SharingFrictionInfo | None
    product_type: str | None
    video_url: AnyUrl | None
    video_view_count: int | None


class EdgeOwnerToTimelineMediaEdge(BaseModel):
    node: TentacledNode | None


class EdgeOwnerToTimelineVideoMediaEdge(BaseModel):
    node: StickyNode | None


class EdgeMediaTo(BaseModel):
    edges: list[EdgeMediaToCaptionEdge] | None


class EdgeSidecarToChildrenEdge(BaseModel):
    node: FluffyNode | None


class EdgeOwnerToTimelineMedia(BaseModel):
    count: int | None
    edges: list[EdgeOwnerToTimelineMediaEdge] | None


class EdgeOwnerToTimelineVideoMedia(BaseModel):
    edges: list[EdgeOwnerToTimelineVideoMediaEdge] | None


class EdgeSidecarToChildren(BaseModel):
    edges: list[EdgeSidecarToChildrenEdge] | None


class Owner(BaseModel):
    id: str | None
    profile_pic_url: AnyUrl | None
    username: str | None
    followed_by_viewer: bool | None
    has_public_story: bool | None
    is_private: bool | None
    is_unpublished: bool | None
    is_verified: bool | None
    edge_followed_by: Edge | None
    edge_owner_to_timeline_media: EdgeOwnerToTimelineMedia | None
    edge_owner_to_timeline_video_media: EdgeOwnerToTimelineVideoMedia | None


class ShortcodeMedia(BaseModel):
    typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    shortcode: str | None
    commenter_count: int | None
    dimensions: Dimensions | None
    display_url: AnyUrl | None
    display_resources: list[Resource] | None
    is_video: bool | None = False
    sharing_friction_info: SharingFrictionInfo | None
    owner: Owner | None
    taken_at_timestamp: int | None
    edge_media_to_caption: EdgeMediaTo | None
    edge_media_to_sponsor_user: EdgeMediaTo | None
    is_affiliate: bool | None
    is_paid_partnership: bool | None
    like_and_view_counts_disabled: bool | None
    media_preview: str | None
    edge_media_to_comment: Edge | None
    edge_liked_by: Edge | None
    coauthor_producers: list | None
    pinned_for_users: list | None
    edge_sidecar_to_children: EdgeSidecarToChildren | None
    title: str | None
    product_type: str | None
    video_url: AnyUrl | None
    video_view_count: int | None
    clips_music_attribution_info: ClipsMusicAttributionInfo | None


class Data(BaseModel):
    shortcode_media: ShortcodeMedia | None


class Extra(BaseModel):
    data: Data | None


class InstagramEmbedDataRaw(BaseModel):
    extra: Extra | None
