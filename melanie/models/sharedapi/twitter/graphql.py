# generated by datamodel-codegen:
#   timestamp: 2023-09-21T00:45:48+00:00

from __future__ import annotations

from typing import Annotated

from melanie import AnyUrl, BaseModel, Field


class Badge(BaseModel):
    url: AnyUrl | None


class LandingURLClass(BaseModel):
    url: str | None
    url_type: Annotated[str | None, Field(alias="urlType")]


class BusinessAccount(BaseModel):
    pass


class HighlightsInfo(BaseModel):
    can_highlight_tweets: bool | None
    highlighted_tweets: int | None


class URLElement(BaseModel):
    display_url: str | None
    expanded_url: AnyUrl | None
    url: AnyUrl | None
    indices: list[int] | None


class Category(BaseModel):
    id: int | None
    name: str | None
    icon_name: str | None


class TimelinesDetails(BaseModel):
    injection_type: Annotated[str | None, Field(alias="injectionType")]
    controller_data: Annotated[str | None, Field(alias="controllerData")]
    source_data: Annotated[str | None, Field(alias="sourceData")]


class Footer(BaseModel):
    display_type: Annotated[str | None, Field(alias="displayType")]
    text: str | None
    landing_url: Annotated[LandingURLClass | None, Field(alias="landingUrl")]


class Header(BaseModel):
    display_type: Annotated[str | None, Field(alias="displayType")]
    text: str | None
    sticky: bool | None


class EditControl(BaseModel):
    edit_tweet_ids: list[str] | None
    editable_until_msecs: str | None
    is_edit_eligible: bool | None
    edits_remaining: int | None


class EXTMediaAvailability(BaseModel):
    status: str | None


class FocusRect(BaseModel):
    x: int | None
    y: int | None
    w: int | None
    h: int | None


class OriginalInfo(BaseModel):
    height: int | None
    width: int | None
    focus_rects: list[FocusRect] | None


class ThumbClass(BaseModel):
    h: int | None
    w: int | None
    resize: str | None


class Variant(BaseModel):
    bitrate: int | None
    content_type: str | None
    url: AnyUrl | None


class UserMention(BaseModel):
    id_str: str | None
    name: str | None
    screen_name: str | None
    indices: list[int] | None


class MediaStats(BaseModel):
    view_count: Annotated[int | None, Field(alias="viewCount")]


class QuotedStatusPermalink(BaseModel):
    url: AnyUrl | None
    expanded: AnyUrl | None
    display: str | None


class TentacledAdditionalMediaInfo(BaseModel):
    monetizable: bool | None


class UnifiedCard(BaseModel):
    card_fetch_state: str | None


class PurpleViews(BaseModel):
    count: int | None
    state: str | None


class QuickPromoteEligibility(BaseModel):
    eligibility: str | None


class ConversationMetadata(BaseModel):
    all_tweet_ids: Annotated[list[str] | None, Field(alias="allTweetIds")]
    enable_deduplication: Annotated[bool | None, Field(alias="enableDeduplication")]


class PurpleClientEventInfo(BaseModel):
    component: str | None
    element: str | None


class SocialContext(BaseModel):
    type: str | None
    context_type: Annotated[str | None, Field(alias="contextType")]
    text: str | None


class ScribeConfig(BaseModel):
    page: str | None


class Ref(BaseModel):
    url: str | None
    url_type: str | None


class Tracing(BaseModel):
    trace_id: str | None


class Location(BaseModel):
    line: int | None
    column: int | None


class Value(BaseModel):
    string_value: str | None
    type: str | None
    boolean_value: bool | None
    scribe_key: str | None


class Audience(BaseModel):
    name: str | None


class Device(BaseModel):
    name: str | None
    version: int | None


class FluffyViews(BaseModel):
    state: str | None


class Label(BaseModel):
    url: LandingURLClass | None
    badge: Badge | None
    description: str | None
    user_label_type: Annotated[str | None, Field(alias="userLabelType")]
    user_label_display_type: Annotated[str | None, Field(alias="userLabelDisplayType")]


class URLClass(BaseModel):
    urls: list[URLElement] | None


class Professional(BaseModel):
    rest_id: str | None
    professional_type: str | None
    category: list[Category] | None


class Details(BaseModel):
    timelines_details: Annotated[TimelinesDetails | None, Field(alias="timelinesDetails")]


class TentacledEntities(BaseModel):
    description: URLClass | None


class OrigClass(BaseModel):
    faces: list[FocusRect] | None


class Sizes(BaseModel):
    large: ThumbClass | None
    medium: ThumbClass | None
    small: ThumbClass | None
    thumb: ThumbClass | None


class VideoInfo(BaseModel):
    aspect_ratio: list[int] | None
    duration_millis: int | None
    variants: list[Variant] | None


class ContentMetadata(BaseModel):
    conversation_metadata: Annotated[ConversationMetadata | None, Field(alias="conversationMetadata")]


class TimelineMetadata(BaseModel):
    scribe_config: Annotated[ScribeConfig | None, Field(alias="scribeConfig")]


class Entity(BaseModel):
    from_index: int | None
    to_index: int | None
    ref: Ref | None


class Extensions(BaseModel):
    name: str | None
    source: str | None
    code: int | None
    kind: str | None
    tracing: Tracing | None


class BindingValue(BaseModel):
    key: str | None
    value: Value | None


class Platform(BaseModel):
    audience: Audience | None
    device: Device | None


class AffiliatesHighlightedLabel(BaseModel):
    label: Label | None


class PurpleEntities(BaseModel):
    description: URLClass | None
    url: URLClass | None


class ItemClientEventInfo(BaseModel):
    component: str | None
    element: str | None
    details: Details | None


class TentacledLegacy(BaseModel):
    can_dm: bool | None
    can_media_tag: bool | None
    created_at: str | None
    default_profile: bool | None
    default_profile_image: bool | None
    description: str | None
    entities: TentacledEntities | None
    fast_followers_count: int | None
    favourites_count: int | None
    followers_count: int | None
    friends_count: int | None
    has_custom_timelines: bool | None
    is_translator: bool | None
    listed_count: int | None
    location: str | None
    media_count: int | None
    name: str | None
    normal_followers_count: int | None
    pinned_tweet_ids_str: list[str] | None
    possibly_sensitive: bool | None
    profile_banner_url: AnyUrl | None
    profile_image_url_https: AnyUrl | None
    profile_interstitial_type: str | None
    screen_name: str | None
    statuses_count: int | None
    translator_type: str | None
    verified: bool | None
    want_retweets: bool | None
    withheld_in_countries: list | None


class Features(BaseModel):
    large: OrigClass | None
    medium: OrigClass | None
    small: OrigClass | None
    orig: OrigClass | None


class TentacledMedia(BaseModel):
    display_url: str | None
    expanded_url: AnyUrl | None
    id_str: str | None
    indices: list[int] | None
    media_url_https: AnyUrl | None
    type: str | None
    url: AnyUrl | None
    features: Features | None
    sizes: Sizes | None
    original_info: OriginalInfo | None


class StickyMedia(BaseModel):
    display_url: str | None
    expanded_url: AnyUrl | None
    id_str: str | None
    indices: list[int] | None
    media_key: str | None
    media_url_https: AnyUrl | None
    type: str | None
    url: AnyUrl | None
    ext_media_availability: EXTMediaAvailability | None
    features: Features | None
    sizes: Sizes | None
    original_info: OriginalInfo | None
    additional_media_info: TentacledAdditionalMediaInfo | None
    media_stats: Annotated[MediaStats | None, Field(alias="mediaStats")]
    video_info: VideoInfo | None


class ReasonDescription(BaseModel):
    text: str | None
    entities: list[Entity] | None


class Error(BaseModel):
    message: str | None
    locations: list[Location] | None
    path: list[str] | None
    extensions: Extensions | None
    code: int | None
    kind: str | None
    name: str | None
    source: str | None
    tracing: Tracing | None


class CardPlatform(BaseModel):
    platform: Platform | None


class CunningResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    rest_id: int | None
    affiliates_highlighted_label: AffiliatesHighlightedLabel | None
    is_blue_verified: bool | None
    profile_image_shape: str | None
    legacy: TentacledLegacy | None
    professional: Professional | None


class PurpleLegacy(BaseModel):
    created_at: str | None
    default_profile: bool | None
    default_profile_image: bool | None
    description: str | None
    entities: PurpleEntities | None
    fast_followers_count: int | None
    favourites_count: int | None
    followers_count: int | None
    friends_count: int | None
    has_custom_timelines: bool | None
    is_translator: bool | None
    listed_count: int | None
    location: str | None
    media_count: int | None
    name: str | None
    normal_followers_count: int | None
    pinned_tweet_ids_str: list[str] | None
    possibly_sensitive: bool | None
    profile_banner_url: AnyUrl | None
    profile_image_url_https: AnyUrl | None
    profile_interstitial_type: str | None
    screen_name: str | None
    statuses_count: int | None
    translator_type: str | None
    verified: bool | None
    withheld_in_countries: list | None
    url: AnyUrl | None
    can_dm: bool | None
    can_media_tag: bool | None
    want_retweets: bool | None
    verified_type: str | None


class TentacledResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    rest_id: str | None
    affiliates_highlighted_label: BusinessAccount | None
    has_graduated_access: bool | None
    is_blue_verified: bool | None
    profile_image_shape: str | None
    legacy: PurpleLegacy | None
    professional: Professional | None


class StickyResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    rest_id: str | None
    affiliates_highlighted_label: BusinessAccount | None
    has_graduated_access: bool | None
    is_blue_verified: bool | None
    profile_image_shape: str | None
    legacy: TentacledLegacy | None


class IndigoResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    rest_id: str | None
    affiliates_highlighted_label: AffiliatesHighlightedLabel | None
    has_graduated_access: bool | None
    is_blue_verified: bool | None
    profile_image_shape: str | None
    legacy: PurpleLegacy | None
    professional: Professional | None


class StickyEntities(BaseModel):
    user_mentions: list[UserMention] | None
    urls: list[URLElement] | None
    hashtags: list | None
    symbols: list | None
    media: list[TentacledMedia] | None


class FluffyExtendedEntities(BaseModel):
    media: list[StickyMedia] | None


class Reason(BaseModel):
    description: ReasonDescription | None
    verified_since_msec: str | None
    override_verified_year: int | None


class CardLegacy(BaseModel):
    binding_values: list[BindingValue] | None
    card_platform: CardPlatform | None
    name: str | None
    url: str | None
    user_refs_results: list | None


class TentacledUserResults(BaseModel):
    result: CunningResult | None


class ItemContentUserResults(BaseModel):
    result: TentacledResult | None


class PurpleUserResults(BaseModel):
    result: StickyResult | None


class FluffyUserResults(BaseModel):
    result: IndigoResult | None


class StickyLegacy(BaseModel):
    bookmark_count: int | None
    bookmarked: bool | None
    created_at: str | None
    conversation_id_str: str | None
    display_text_range: list[int] | None
    entities: StickyEntities | None
    favorite_count: int | None
    favorited: bool | None
    full_text: str | None
    is_quote_status: bool | None
    lang: str | None
    possibly_sensitive: bool | None
    possibly_sensitive_editable: bool | None
    quote_count: int | None
    reply_count: int | None
    retweet_count: int | None
    retweeted: bool | None
    user_id_str: str | None
    id_str: str | None
    extended_entities: FluffyExtendedEntities | None


class VerificationInfo(BaseModel):
    is_identity_verified: bool | None
    reason: Reason | None


class Card(BaseModel):
    rest_id: str | None
    legacy: CardLegacy | None


class FluffyCore(BaseModel):
    user_results: TentacledUserResults | None


class SourceUserClass(BaseModel):
    user_results: ItemContentUserResults | None


class SourceUser(BaseModel):
    user_results: PurpleUserResults | None


class FluffyAdditionalMediaInfo(BaseModel):
    monetizable: bool | None
    source_user: SourceUserClass | None


class PurpleCore(BaseModel):
    user_results: FluffyUserResults | None


class PurpleAdditionalMediaInfo(BaseModel):
    monetizable: bool | None
    source_user: SourceUser | None


class FluffyMedia(BaseModel):
    display_url: str | None
    expanded_url: AnyUrl | None
    id_str: str | None
    indices: list[int] | None
    media_key: str | None
    media_url_https: AnyUrl | None
    source_status_id_str: str | None
    source_user_id_str: str | None
    type: str | None
    url: AnyUrl | None
    ext_media_availability: EXTMediaAvailability | None
    features: Features | None
    sizes: Sizes | None
    original_info: OriginalInfo | None
    additional_media_info: FluffyAdditionalMediaInfo | None
    media_stats: Annotated[MediaStats | None, Field(alias="mediaStats")]
    video_info: VideoInfo | None


class RetweetedStatusResultResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    rest_id: str | None
    core: PurpleCore | None
    unified_card: UnifiedCard | None
    edit_control: EditControl | None
    is_translatable: bool | None
    views: PurpleViews | None
    source: str | None
    legacy: StickyLegacy | None


class PurpleMedia(BaseModel):
    display_url: str | None
    expanded_url: AnyUrl | None
    id_str: str | None
    indices: list[int] | None
    media_key: str | None
    media_url_https: AnyUrl | None
    source_status_id_str: str | None
    source_user_id_str: str | None
    type: str | None
    url: AnyUrl | None
    ext_media_availability: EXTMediaAvailability | None
    features: Features | None
    sizes: Sizes | None
    original_info: OriginalInfo | None
    additional_media_info: PurpleAdditionalMediaInfo | None
    video_info: VideoInfo | None


class PurpleExtendedEntities(BaseModel):
    media: list[FluffyMedia] | None


class RetweetedStatusResult(BaseModel):
    result: RetweetedStatusResultResult | None


class TentacledExtendedEntities(BaseModel):
    media: list[PurpleMedia] | None


class FluffyEntities(BaseModel):
    user_mentions: list[UserMention] | None
    urls: list[URLElement] | None
    hashtags: list | None
    symbols: list | None
    media: list[PurpleMedia] | None


class IndigoLegacy(BaseModel):
    bookmark_count: int | None
    bookmarked: bool | None
    created_at: str | None
    conversation_id_str: str | None
    display_text_range: list[int] | None
    entities: StickyEntities | None
    extended_entities: TentacledExtendedEntities | None
    favorite_count: int | None
    favorited: bool | None
    full_text: str | None
    is_quote_status: bool | None
    lang: str | None
    possibly_sensitive: bool | None
    possibly_sensitive_editable: bool | None
    quote_count: int | None
    reply_count: int | None
    retweet_count: int | None
    retweeted: bool | None
    user_id_str: str | None
    id_str: str | None
    in_reply_to_screen_name: str | None
    in_reply_to_status_id_str: str | None
    in_reply_to_user_id_str: str | None


class IndecentLegacy(BaseModel):
    bookmark_count: int | None
    bookmarked: bool | None
    created_at: str | None
    conversation_id_str: str | None
    display_text_range: list[int] | None
    entities: FluffyEntities | None
    favorite_count: int | None
    favorited: bool | None
    full_text: str | None
    is_quote_status: bool | None
    lang: str | None
    possibly_sensitive: bool | None
    possibly_sensitive_editable: bool | None
    quote_count: int | None
    reply_count: int | None
    retweet_count: int | None
    retweeted: bool | None
    user_id_str: int | None
    id_str: str | None


class FluffyLegacy(BaseModel):
    bookmark_count: int | None
    bookmarked: bool | None
    created_at: str | None
    conversation_id_str: str | None
    display_text_range: list[int] | None
    entities: FluffyEntities | None
    favorite_count: int | None
    favorited: bool | None
    full_text: str | None
    is_quote_status: bool | None
    lang: str | None
    possibly_sensitive: bool | None
    possibly_sensitive_editable: bool | None
    quote_count: int | None
    reply_count: int | None
    retweet_count: int | None
    retweeted: bool | None
    user_id_str: str | None
    id_str: str | None
    retweeted_status_result: RetweetedStatusResult | None
    extended_entities: PurpleExtendedEntities | None
    in_reply_to_screen_name: str | None
    in_reply_to_status_id_str: str | None
    in_reply_to_user_id_str: str | None
    quoted_status_id_str: str | None
    quoted_status_permalink: QuotedStatusPermalink | None


class IndecentResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    rest_id: str | None
    core: SourceUserClass | None
    edit_control: EditControl | None
    is_translatable: bool | None
    views: PurpleViews | None
    source: str | None
    legacy: IndigoLegacy | None
    quick_promote_eligibility: QuickPromoteEligibility | None


class QuotedStatusResultResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    rest_id: str | None
    core: FluffyCore | None
    card: Card | None
    unified_card: UnifiedCard | None
    edit_control: EditControl | None
    is_translatable: bool | None
    views: FluffyViews | None
    source: str | None
    legacy: IndecentLegacy | None


class FluffyResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    rest_id: str | None
    core: SourceUserClass | None
    unified_card: UnifiedCard | None
    edit_control: EditControl | None
    is_translatable: bool | None
    views: PurpleViews | None
    source: str | None
    legacy: FluffyLegacy | None
    quick_promote_eligibility: QuickPromoteEligibility | None


class FluffyTweetResults(BaseModel):
    result: IndecentResult | None


class FluffyItemContent(BaseModel):
    item_type: Annotated[str | None, Field(alias="itemType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    tweet_results: FluffyTweetResults | None
    tweet_display_type: Annotated[str | None, Field(alias="tweetDisplayType")]
    social_context: Annotated[SocialContext | None, Field(alias="socialContext")]


class QuotedStatusResult(BaseModel):
    result: QuotedStatusResultResult | None


class PurpleTweetResults(BaseModel):
    result: FluffyResult | None


class ItemItemContent(BaseModel):
    item_type: Annotated[str | None, Field(alias="itemType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    user_results: ItemContentUserResults | None
    user_display_type: Annotated[str | None, Field(alias="userDisplayType")]
    tweet_results: FluffyTweetResults | None
    tweet_display_type: Annotated[str | None, Field(alias="tweetDisplayType")]


class FluffyContent(BaseModel):
    entry_type: Annotated[str | None, Field(alias="entryType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    item_content: Annotated[FluffyItemContent | None, Field(alias="itemContent")]
    client_event_info: Annotated[PurpleClientEventInfo | None, Field(alias="clientEventInfo")]


class AmbitiousResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    rest_id: str | None
    core: PurpleCore | None
    edit_control: EditControl | None
    is_translatable: bool | None
    views: PurpleViews | None
    source: str | None
    legacy: FluffyLegacy | None
    quick_promote_eligibility: QuickPromoteEligibility | None
    quoted_status_result: QuotedStatusResult | None
    card: Card | None
    unified_card: UnifiedCard | None


class PurpleItemContent(BaseModel):
    item_type: Annotated[str | None, Field(alias="itemType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    tweet_results: PurpleTweetResults | None
    tweet_display_type: Annotated[str | None, Field(alias="tweetDisplayType")]


class ItemItem(BaseModel):
    item_content: Annotated[ItemItemContent | None, Field(alias="itemContent")]
    client_event_info: Annotated[ItemClientEventInfo | None, Field(alias="clientEventInfo")]


class FluffyEntry(BaseModel):
    entry_id: Annotated[str | None, Field(alias="entryId")]
    sort_index: Annotated[str | None, Field(alias="sortIndex")]
    content: FluffyContent | None


class TentacledTweetResults(BaseModel):
    result: AmbitiousResult | None


class ItemElement(BaseModel):
    entry_id: Annotated[str | None, Field(alias="entryId")]
    item: ItemItem | None


class TentacledItemContent(BaseModel):
    item_type: Annotated[str | None, Field(alias="itemType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    tweet_results: TentacledTweetResults | None
    tweet_display_type: Annotated[str | None, Field(alias="tweetDisplayType")]


class PurpleContent(BaseModel):
    entry_type: Annotated[str | None, Field(alias="entryType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    item_content: Annotated[PurpleItemContent | None, Field(alias="itemContent")]
    client_event_info: Annotated[ItemClientEventInfo | None, Field(alias="clientEventInfo")]
    items: list[ItemElement] | None
    display_type: Annotated[str | None, Field(alias="displayType")]
    header: Header | None
    footer: Footer | None
    metadata: ContentMetadata | None
    value: str | None
    cursor_type: Annotated[str | None, Field(alias="cursorType")]


class TentacledContent(BaseModel):
    entry_type: Annotated[str | None, Field(alias="entryType")]
    field__typename: Annotated[str | None, Field(alias="__typename")]
    item_content: Annotated[TentacledItemContent | None, Field(alias="itemContent")]
    client_event_info: Annotated[ItemClientEventInfo | None, Field(alias="clientEventInfo")]
    items: list[ItemElement] | None
    display_type: Annotated[str | None, Field(alias="displayType")]
    header: Header | None
    footer: Footer | None
    metadata: ContentMetadata | None
    value: str | None
    cursor_type: Annotated[str | None, Field(alias="cursorType")]


class TweetEntryItem(BaseModel):
    entry_id: Annotated[str | None, Field(alias="entryId")]
    sort_index: Annotated[str | None, Field(alias="sortIndex")]
    content: PurpleContent | None


class TentacledEntry(BaseModel):
    entry_id: Annotated[str | None, Field(alias="entryId")]
    sort_index: Annotated[str | None, Field(alias="sortIndex")]
    content: TentacledContent | None


class PurpleInstruction(BaseModel):
    type: str | None
    entry: FluffyEntry | None
    entries: list[TweetEntryItem] | None


class FluffyInstruction(BaseModel):
    type: str | None
    direction: str | None
    entries: list[TentacledEntry] | None
    entry: FluffyEntry | None


class PurpleTimeline(BaseModel):
    instructions: list[PurpleInstruction] | None
    metadata: TimelineMetadata | None


class FluffyTimeline(BaseModel):
    instructions: list[FluffyInstruction] | None
    metadata: TimelineMetadata | None


class PurpleTimelineV2(BaseModel):
    timeline: PurpleTimeline | None


class FluffyTimelineV2(BaseModel):
    timeline: FluffyTimeline | None


class PurpleResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    id: str | None
    message: str | None
    reason: str | None

    rest_id: str | None
    affiliates_highlighted_label: AffiliatesHighlightedLabel | None
    is_blue_verified: bool | None
    profile_image_shape: str | None
    legacy: PurpleLegacy | None
    professional: Professional | None
    legacy_extended_profile: BusinessAccount | None
    is_profile_translatable: bool | None
    verification_info: VerificationInfo | None
    highlights_info: HighlightsInfo | None
    business_account: BusinessAccount | None
    creator_subscriptions_count: int | None
    timeline_v2: PurpleTimelineV2 | None


class HilariousResult(BaseModel):
    field__typename: Annotated[str | None, Field(alias="__typename")]
    timeline_v2: FluffyTimelineV2 | None


class PurpleUser(BaseModel):
    result: PurpleResult | None


class FluffyUser(BaseModel):
    result: HilariousResult | None


class UserscreenData(BaseModel):
    user: PurpleUser | None


class TopLevelData(BaseModel):
    user: FluffyUser | None


class UserScreenDataRaw(BaseModel):
    errors: list[Error] | None
    data: UserscreenData | None


class UserTweetDataRaw(BaseModel):
    data: TopLevelData | None
